{"version":3,"sources":["components/searchBox.js","components/aleatoireWiki.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","useState","search","setSearch","result","setResult","deleteBalise","sentence","newSentence","replace","toUpperCase","slice","className","id","onKeyPress","event","charCode","fetch","then","response","json","dataJson","a","query","catch","console","error","value","onChange","target","placeholder","map","data","index","href","pageid","title","snippet","AleatoireWiki","rel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NA0DeA,MAxDf,WAEI,IAEA,EAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAe,SAACC,GAElB,IAAIC,EAAYD,EAASE,QAAQ,WAAY,IAE7C,OAAOD,EAAY,GAAGE,cAAcF,EAAYG,MAAM,GAAG,OAgB7D,OACI,gCACI,qBAAKC,UAAU,iDAAf,SACI,uBACAC,GAAG,SACHC,WAlBO,SAACC,GAEQ,KAAnBA,EAAMC,UACPC,MAAM,GAAD,OAfH,qHAeG,OAAUf,IACdgB,MAAK,SAACC,GAAD,OAAYA,EAASC,UAC1BF,KAFD,uCAEM,WAAOG,GAAP,SAAAC,EAAA,kEACNjB,EADM,SACUgB,EAASE,MAAMrB,OADzB,kCAENC,EAAU,IAFJ,2CAFN,uDAMCqB,MAAMC,QAAQC,QAUXC,MAAOzB,EACP0B,SAAU,SAAAb,GAAK,OAAEZ,EAAUY,EAAMc,OAAOF,QACxCG,YAAY,mBAGN,KAAT1B,GACO,qBAAKS,GAAG,YAAYD,UAAU,iBAA9B,SACKR,EAAO2B,KAAI,SAACC,EAAKC,GAAN,OACR,6BACI,qBAAKrB,UAAU,iBAAf,SACA,oBAAGA,UAAU,WAAWsB,KAAI,0CAAqCF,EAAKG,QAAtE,UACI,oBAAIvB,UAAU,mBAAd,SAAkCoB,EAAKI,QACvC,mBAAGxB,UAAU,kBAAb,SAAgCN,EAAa0B,EAAKK,iBAJhDJ,YC1BvBK,MAff,WAEQ,OACA,qBAAK1B,UAAU,kCAAf,SACI,mBACAA,UAAU,iBACVsB,KAAK,+CACLL,OAAO,SACPU,IAAI,sBAJJ,+ECSGC,MATf,WACE,OACE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCES6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.0753ed55.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction SearchBox () {\n\n    const url='https://fr.wikipedia.org/w/api.php?&origin=*&action=query&limit=5&list=search&exsentences=1&format=json&srsearch='\n    \n    const [search,setSearch]=useState('')\n    const [result,setResult]=useState([])\n    \n    const deleteBalise = (sentence)=>{\n        /*élimination des balises HTML*/\n        let newSentence=sentence.replace(/<[^>]+>/g, '')                  \n        /* retourne la 1ère phrase avec une majuscule*/\n        return newSentence[0].toUpperCase()+newSentence.slice(1)+'...'\n    }\n\n    const WikiSearch = (event)=>{\n\n        if  (event.charCode === 13){                   \n            fetch(`${url}${search}`)\n            .then((response)=>response.json())\n            .then(async (dataJson) => {   \n            setResult(await dataJson.query.search)   \n            setSearch('')                                 \n            })                   \n            .catch(console.error)\n        }\n    }    \n    \n    return(\n        <div>\n            <div className=\"container-fluid m-4 text-center searchBoxInput\">                       \n                <input                \n                id=\"search\"\n                onKeyPress={WikiSearch}\n                value={search}\n                onChange={event=>setSearch(event.target.value)}               \n                placeholder=\"Recherche...\"/>  \n            </div>\n\n            {result!==''&&\n                    <div id=\"resultBox\" className=\"container mx-2\">\n                        {result.map((data,index)=>(\n                            <ul key ={index}>\n                                <div className=\"resultArea m-1\">\n                                <a className=\"result_a\" href={`https://en.wikipedia.org/?curid=${data.pageid}`}>\n                                    <h3 className=\"resultTitle mx-4\">{data.title}</h3>\n                                    <p className=\"resultText mx-4\">{deleteBalise(data.snippet)}</p>\n                                </a>  \n                                </div>\n                            </ul>                            \n                        ))}\n                    </div>\n                }\n        </div>    \n    )\n}\n\nexport default SearchBox","import React from \"react\";\n\nfunction AleatoireWiki() {\n\n        return(\n        <div className=\"container-fluid m-2 text-center\"> \n            <a  \n            className=\"randomLink p-1\"          \n            href=\"https://fr.wikipedia.org/wiki/Special:Random\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            Cliquer ici pour obtenir un article au hasard sur Wikipédia\n            </a>   \n        </div>\n    )    \n}\n\nexport default AleatoireWiki","\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './css/app.scss'\nimport SearchBox from './components/searchBox';\nimport AleatoireWiki from './components/aleatoireWiki';\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <AleatoireWiki></AleatoireWiki>\n      <SearchBox></SearchBox>      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}